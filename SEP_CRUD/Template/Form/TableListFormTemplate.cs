// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SEP_CRUD.Template.Form
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\trung\source\repos\SEP_CRUD\SEP_CRUD\Template\Form\TableListFormTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class TableListFormTemplate : SharedFormTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Windows.Forms;\r\n\r\n" +
                    "namespace ");
            
            #line 10 "C:\Users\trung\source\repos\SEP_CRUD\SEP_CRUD\Template\Form\TableListFormTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Generator.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public partial class TableListForm : Form\r\n    {\r\n        public TableLi" +
                    "stForm()\r\n        {\r\n            InitializeComponent();\r\n            this.Load +" +
                    "= OnLoadTableListForm;\r\n            this.Notification.MouseDown += OnMouseDownNo" +
                    "tification;\r\n            OpenLoginForm();\r\n        }\r\n\r\n        private void OnM" +
                    "ouseDownNotification(object sender, MouseEventArgs e)\r\n        {\r\n            if" +
                    " (!Result) OpenLoginForm();\r\n        }\r\n\r\n        private bool Result = false;\r\n" +
                    "\r\n        private void OnLoadTableListForm(object sender, System.EventArgs e)\r\n " +
                    "       {\r\n            RefreshData();\r\n        }\r\n\r\n        private void OpenLogi" +
                    "nForm()\r\n        {\r\n            LoginForm form = new LoginForm();\r\n            f" +
                    "orm.LoginResultHandler = OnLoginResult;\r\n            Hide();\r\n            form.S" +
                    "howDialog(); // Force user focus on login form\r\n        }\r\n\r\n        private voi" +
                    "d OnLoginResult(object sender, bool e)\r\n        {\r\n            Show();\r\n        " +
                    "    Result = e;\r\n            RefreshData();\r\n        }\r\n\r\n        private List<I" +
                    "temTableUserControl> ItemTableUserControls = new List<ItemTableUserControl>();\r\n" +
                    "\r\n        private void RefreshData()\r\n        {\r\n            ItemTableUserContro" +
                    "ls.Clear();\r\n            FlowListPanel.Controls.Clear();\r\n\r\n            if (Resu" +
                    "lt)\r\n            {\r\n                FlowListPanel.Controls.Add(Title);\r\n\r\n      " +
                    "          ViewFormFactory factory = ViewFormFactory.Instance;\r\n                i" +
                    "nt count = factory.Count;\r\n\r\n                ItemTableUserControl c;\r\n          " +
                    "      for(int i = 0; i < count; i++)\r\n                {\r\n                    c =" +
                    " new ItemTableUserControl(i, factory.BindingNames[i], factory.DatabaseNames[i]);" +
                    "\r\n\t\t\t\t\tFlowListPanel.Controls.Add(c);\r\n                    ItemTableUserControls" +
                    ".Add(c);\r\n                }\r\n            } else\r\n            {\r\n                " +
                    "FlowListPanel.Controls.Add(Notification);\r\n            }\r\n        }\r\n    }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
